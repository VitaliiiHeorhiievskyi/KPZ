// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientHealth.DataBase;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231203130422_NotificationsSeed")]
    partial class NotificationsSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApi.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doctor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regularity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Notifications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("52b22119-f91b-4e27-8926-407c6e0c5c41"),
                            Date = new DateTime(2023, 12, 4, 15, 4, 22, 509, DateTimeKind.Local).AddTicks(951),
                            Description = "Don't forget your appointment tomorrow at 10 AM.",
                            Doctor = "Dr. Smith",
                            Duration = 30,
                            Label = "Appointment Reminder",
                            Regularity = "Once",
                            Status = 3,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("87597d6b-6c12-414b-8428-fbc499906ec9"),
                            Date = new DateTime(2023, 12, 3, 21, 4, 22, 509, DateTimeKind.Local).AddTicks(989),
                            Description = "Time to take your medication.",
                            Doctor = "Dr. Jones",
                            Duration = 0,
                            Label = "Medication Reminder",
                            Regularity = "Daily",
                            Status = 2,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("cd8d3970-2eda-48bc-a4d1-805f123cc316"),
                            Date = new DateTime(2023, 12, 5, 15, 4, 22, 509, DateTimeKind.Local).AddTicks(993),
                            Description = "Your recent lab results are ready for review.",
                            Doctor = "Dr. Green",
                            Duration = 0,
                            Label = "Lab Results",
                            Regularity = "Once",
                            Status = 3,
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("aae82102-4c76-447f-88e7-7f2ae0ed06a2"),
                            Date = new DateTime(2023, 12, 10, 15, 4, 22, 509, DateTimeKind.Local).AddTicks(996),
                            Description = "Remember to schedule your follow-up appointment.",
                            Doctor = "Dr. White",
                            Duration = 0,
                            Label = "Follow-up Reminder",
                            Regularity = "Once",
                            Status = 0,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("30099474-3010-4e9f-a6c2-cc7af97746fb"),
                            Date = new DateTime(2023, 12, 6, 15, 4, 22, 509, DateTimeKind.Local).AddTicks(1027),
                            Description = "Check out the latest health tips on our website.",
                            Duration = 0,
                            Label = "Health Tips",
                            Regularity = "Weekly",
                            Status = 1,
                            Type = 1
                        });
                });

            modelBuilder.Entity("WebApi.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
